(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n',"",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB",sourcesContent:['/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n'],sourceRoot:""}]);const A=i},28:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"/* variables */\n:root {\n  --primary: #f4f1f8;\n  --secondary: #ffffff;\n  --tertiary: #000000;\n}\n\n/* base styles */\nhtml {\n  font-size: 16px;\n}\n\n/* fonts */\nbody {\n  font-family: Helvetica;\n}\n\n.logo-text {\n  font-size: 2rem;\n  font-weight: bolder;\n}\n\n.home,\n.projects {\n  font-size: 1.23rem;\n}\n\n.add-task {\n  font-size: 0.7rem;\n}\n\n.footer {\n  font-size: 0.8rem;\n}\n\n.task-h,\n.task-h-input {\n  font-size: 1.2rem;\n  font-weight: bolder;\n}\n\n/* mobile styles */\n.main-container {\n  width: 100%;\n}\n\n.sidebar {\n  display: none;\n}\n\n.show-sb {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n}\n\n.close-hambg {\n  padding: 1.5rem 0;\n}\n\n.home {\n  margin-top: 3rem;\n}\n\n.home-heading,\n.projects-heading {\n  cursor: pointer;\n}\n\n.home-item,\n.project-item {\n  cursor: pointer;\n  margin: 1rem;\n}\n\n.projects {\n  margin-top: 3rem;\n}\n\n.proj-title-input {\n  width: 50%;\n}\n\n.close-proj {\n  margin: 0 0 0.2rem 1.5rem;\n  width: 0.5rem;\n}\n\n.logo {\n  width: 2rem;\n  margin: 0.5rem 0.7rem 0 0.5rem;\n}\n\n.ico {\n  cursor: pointer;\n  width: 1.2rem;\n  margin: 0 0.4rem;\n}\n\n.display {\n  width: 100%;\n  height: 100%;\n  background-color: var(--primary);\n}\n\n.hide-disp {\n  display: none;\n}\n\n.display-h {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 3rem;\n  background-color: var(--secondary);\n  padding: 5%;\n  display: flex;\n  align-items: center;\n  border-bottom: 0.3rem solid var(--tertiary);\n}\n\n.display-rh {\n  position: fixed;\n  right: 1rem;\n}\n\n.tasks-container {\n  padding: 5%;\n  min-height: 100vh;\n  height: 100%;\n}\n\n#task-1 {\n  padding: 0.5rem;\n  background-color: white;\n  text-align: left;\n  margin: 5rem auto 1.5rem auto;\n  width: 85%;\n  max-width: 25rem;\n}\n\n.task {\n  padding: 0.5rem;\n  background-color: white;\n  text-align: justify;\n  margin: 5rem auto 0 auto;\n  width: 85%;\n  max-width: 25rem;\n}\n\n.task-h-input,\n.task-desc-input {\n  width: 90%;\n}\n\n.task-desc {\n  margin: 0 auto;\n  max-width: 19.5rem;\n}\n\n.checkbox {\n  padding: 0 0.5rem 0 1rem;\n}\n\n.due-date {\n  margin: 0.5rem 0;\n}\n\n.add-task {\n  cursor: pointer;\n  background-color: var(--tertiary);\n  color: var(--secondary);\n  padding: 0.5rem;\n  width: 30%;\n  text-align: center;\n  margin: 5rem auto 4.2rem auto;\n}\n\n.task-h-input,\n.task-desc-input {\n  border: 0;\n}\n\n.footer {\n  background-color: var(--tertiary);\n  color: var(--secondary);\n  padding: 0.8rem 0.5% 0.5rem 0.5%;\n  width: 70%;\n  text-align: center;\n  margin: 0 auto;\n  position: fixed;\n  left: 50%;\n  transform: translate(-50%, 0);\n  bottom: 1rem;\n}\n\n/* small tablet styles */\n@media (min-width: 500px) {\n  .task-1 {\n    padding: 0.5rem;\n    background-color: white;\n    text-align: justify;\n    margin: 8rem auto 1.5rem auto;\n    width: 85%;\n    max-width: 25rem;\n  }\n\n  .tasks-container {\n    margin-top: 1rem;\n  }\n}\n\n/* large tablet styles */\n@media (min-width: 670px) {\n  html {\n    font-size: 18px;\n  }\n  .sidebar {\n    position: fixed;\n    height: 100%;\n    z-index: 1;\n    box-shadow: 2px 5px 5px black;\n    padding: 1.3rem;\n    max-width: 13rem;\n    width: 15rem;\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n  }\n\n  .close-hambg {\n    display: none;\n  }\n\n  .display-h {\n    border-bottom: 0;\n    background-color: transparent;\n  }\n\n  .display {\n    margin-left: 15.5rem;\n    width: 100%;\n  }\n\n  .ico {\n    margin: 0 0.8rem;\n  }\n\n  .hambg {\n    display: none;\n  }\n  .main-container {\n    display: flex;\n  }\n\n  .footer {\n    width: 10rem;\n    left: 7.6rem;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,cAAc;AACd;EACE,kBAAkB;EAClB,oBAAoB;EACpB,mBAAmB;AACrB;;AAEA,gBAAgB;AAChB;EACE,eAAe;AACjB;;AAEA,UAAU;AACV;EACE,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;;AAEA;;EAEE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;;EAEE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA,kBAAkB;AAClB;EACE,WAAW;AACb;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,eAAe;AACjB;;AAEA;;EAEE,eAAe;EACf,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,WAAW;EACX,8BAA8B;AAChC;;AAEA;EACE,eAAe;EACf,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,gCAAgC;AAClC;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,MAAM;EACN,WAAW;EACX,YAAY;EACZ,kCAAkC;EAClC,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,2CAA2C;AAC7C;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,gBAAgB;EAChB,6BAA6B;EAC7B,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,uBAAuB;EACvB,mBAAmB;EACnB,wBAAwB;EACxB,UAAU;EACV,gBAAgB;AAClB;;AAEA;;EAEE,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,uBAAuB;EACvB,eAAe;EACf,UAAU;EACV,kBAAkB;EAClB,6BAA6B;AAC/B;;AAEA;;EAEE,SAAS;AACX;;AAEA;EACE,iCAAiC;EACjC,uBAAuB;EACvB,gCAAgC;EAChC,UAAU;EACV,kBAAkB;EAClB,cAAc;EACd,eAAe;EACf,SAAS;EACT,6BAA6B;EAC7B,YAAY;AACd;;AAEA,wBAAwB;AACxB;EACE;IACE,eAAe;IACf,uBAAuB;IACvB,mBAAmB;IACnB,6BAA6B;IAC7B,UAAU;IACV,gBAAgB;EAClB;;EAEA;IACE,gBAAgB;EAClB;AACF;;AAEA,wBAAwB;AACxB;EACE;IACE,eAAe;EACjB;EACA;IACE,eAAe;IACf,YAAY;IACZ,UAAU;IACV,6BAA6B;IAC7B,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,gBAAgB;EAClB;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,gBAAgB;IAChB,6BAA6B;EAC/B;;EAEA;IACE,oBAAoB;IACpB,WAAW;EACb;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,aAAa;EACf;EACA;IACE,aAAa;EACf;;EAEA;IACE,YAAY;IACZ,YAAY;EACd;AACF",sourcesContent:["/* variables */\n:root {\n  --primary: #f4f1f8;\n  --secondary: #ffffff;\n  --tertiary: #000000;\n}\n\n/* base styles */\nhtml {\n  font-size: 16px;\n}\n\n/* fonts */\nbody {\n  font-family: Helvetica;\n}\n\n.logo-text {\n  font-size: 2rem;\n  font-weight: bolder;\n}\n\n.home,\n.projects {\n  font-size: 1.23rem;\n}\n\n.add-task {\n  font-size: 0.7rem;\n}\n\n.footer {\n  font-size: 0.8rem;\n}\n\n.task-h,\n.task-h-input {\n  font-size: 1.2rem;\n  font-weight: bolder;\n}\n\n/* mobile styles */\n.main-container {\n  width: 100%;\n}\n\n.sidebar {\n  display: none;\n}\n\n.show-sb {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n}\n\n.close-hambg {\n  padding: 1.5rem 0;\n}\n\n.home {\n  margin-top: 3rem;\n}\n\n.home-heading,\n.projects-heading {\n  cursor: pointer;\n}\n\n.home-item,\n.project-item {\n  cursor: pointer;\n  margin: 1rem;\n}\n\n.projects {\n  margin-top: 3rem;\n}\n\n.proj-title-input {\n  width: 50%;\n}\n\n.close-proj {\n  margin: 0 0 0.2rem 1.5rem;\n  width: 0.5rem;\n}\n\n.logo {\n  width: 2rem;\n  margin: 0.5rem 0.7rem 0 0.5rem;\n}\n\n.ico {\n  cursor: pointer;\n  width: 1.2rem;\n  margin: 0 0.4rem;\n}\n\n.display {\n  width: 100%;\n  height: 100%;\n  background-color: var(--primary);\n}\n\n.hide-disp {\n  display: none;\n}\n\n.display-h {\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 3rem;\n  background-color: var(--secondary);\n  padding: 5%;\n  display: flex;\n  align-items: center;\n  border-bottom: 0.3rem solid var(--tertiary);\n}\n\n.display-rh {\n  position: fixed;\n  right: 1rem;\n}\n\n.tasks-container {\n  padding: 5%;\n  min-height: 100vh;\n  height: 100%;\n}\n\n#task-1 {\n  padding: 0.5rem;\n  background-color: white;\n  text-align: left;\n  margin: 5rem auto 1.5rem auto;\n  width: 85%;\n  max-width: 25rem;\n}\n\n.task {\n  padding: 0.5rem;\n  background-color: white;\n  text-align: justify;\n  margin: 5rem auto 0 auto;\n  width: 85%;\n  max-width: 25rem;\n}\n\n.task-h-input,\n.task-desc-input {\n  width: 90%;\n}\n\n.task-desc {\n  margin: 0 auto;\n  max-width: 19.5rem;\n}\n\n.checkbox {\n  padding: 0 0.5rem 0 1rem;\n}\n\n.due-date {\n  margin: 0.5rem 0;\n}\n\n.add-task {\n  cursor: pointer;\n  background-color: var(--tertiary);\n  color: var(--secondary);\n  padding: 0.5rem;\n  width: 30%;\n  text-align: center;\n  margin: 5rem auto 4.2rem auto;\n}\n\n.task-h-input,\n.task-desc-input {\n  border: 0;\n}\n\n.footer {\n  background-color: var(--tertiary);\n  color: var(--secondary);\n  padding: 0.8rem 0.5% 0.5rem 0.5%;\n  width: 70%;\n  text-align: center;\n  margin: 0 auto;\n  position: fixed;\n  left: 50%;\n  transform: translate(-50%, 0);\n  bottom: 1rem;\n}\n\n/* small tablet styles */\n@media (min-width: 500px) {\n  .task-1 {\n    padding: 0.5rem;\n    background-color: white;\n    text-align: justify;\n    margin: 8rem auto 1.5rem auto;\n    width: 85%;\n    max-width: 25rem;\n  }\n\n  .tasks-container {\n    margin-top: 1rem;\n  }\n}\n\n/* large tablet styles */\n@media (min-width: 670px) {\n  html {\n    font-size: 18px;\n  }\n  .sidebar {\n    position: fixed;\n    height: 100%;\n    z-index: 1;\n    box-shadow: 2px 5px 5px black;\n    padding: 1.3rem;\n    max-width: 13rem;\n    width: 15rem;\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n  }\n\n  .close-hambg {\n    display: none;\n  }\n\n  .display-h {\n    border-bottom: 0;\n    background-color: transparent;\n  }\n\n  .display {\n    margin-left: 15.5rem;\n    width: 100%;\n  }\n\n  .ico {\n    margin: 0 0.8rem;\n  }\n\n  .hambg {\n    display: none;\n  }\n  .main-container {\n    display: flex;\n  }\n\n  .footer {\n    width: 10rem;\n    left: 7.6rem;\n  }\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=r.base?s[0]+r.base:s[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var m=t(l),p={css:s[1],media:s[2],sourceMap:s[3]};-1!==m?(e[m].references++,e[m].updater(p)):e.push({identifier:l,updater:o(p,r),references:1}),i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=r(n,o),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r=t.css,o=t.media,a=t.sourceMap;o?n.setAttribute("media",o):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),A=t(565),s=t.n(A),c=t(216),d=t.n(c),l=t(589),m=t.n(l),p=t(917),u={};u.styleTagTransform=m(),u.setAttributes=s(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=d(),e()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals;var g=t(28),f={};f.styleTagTransform=m(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),e()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals;const E=n=>({projectName:n,tasks:[]}),h={projectsArray:[],defaultProject:E("inbox")},C=((()=>{const n=document.querySelector(".display-lh"),e=document.querySelector(".home-heading"),t=document.querySelector(".inbox"),r=()=>{const e=Array.from(document.querySelectorAll(".task"));"Inbox"!==n&&(e.forEach((n=>n.setAttribute("style","display:none;"))),n.textContent="Inbox",h.defaultProject.tasks.forEach((n=>{for(let t=0;t<e.length;t++)n.title===e[t].childNodes[0].textContent&&e[t].removeAttribute("style")})))};e.addEventListener("click",r),t.addEventListener("click",r)})(),n=>{const e=document.querySelector(".display-lh"),t=document.querySelectorAll(".project-item"),r=Array.from(document.querySelectorAll(".task"));e.textContent=n,r.forEach((n=>n.setAttribute("style","display:none;"))),t.forEach((()=>{if(e.textContent===n){const e=Array.from(document.querySelectorAll(".task"));h.projectsArray.forEach((t=>{t.projectName===n&&t.tasks.forEach((n=>{for(let t=0;t<e.length;t++)n.title===e[t].childNodes[0].textContent&&e[t].removeAttribute("style")}))}))}}))}),y=((()=>{const n=document.querySelector(".hambg"),e=document.querySelector(".display"),t=document.querySelector(".sidebar"),r=document.querySelector(".close-hambg");n.addEventListener("click",(()=>{e.classList.toggle("display"),e.classList.toggle("hide-disp"),t.classList.toggle("sidebar"),t.classList.toggle("show-sb")})),r.addEventListener("click",(()=>{e.classList.toggle("display"),e.classList.toggle("hide-disp"),t.classList.toggle("sidebar"),t.classList.toggle("show-sb")}))})(),(n,e,t)=>{const r=document.querySelector(".add-task"),o=document.querySelector(".display-lh"),a=document.createElement("div"),i=document.createElement("img"),A=document.createElement("span"),s=document.createElement("p"),c=document.createElement("p");if(a.classList.add("task"),A.classList.add("task-h"),i.classList.add("ico","checkbox"),c.classList.add("due-date"),s.classList.add("task-desc"),i.src="./images/icons/circle-svgrepo-com.svg",i.addEventListener("click",(()=>a.remove())),n||e||t)A.append(i,n),c.textContent=t,s.textContent=e,a.append(A,c,s),r.insertAdjacentElement("beforebegin",a);else{const n=document.createElement("input"),e=document.createElement("input"),t=document.createElement("input");n.classList.add("task-h-input"),e.classList.add("task-desc-input"),n.type="text",n.placeholder="Title",t.type="date",e.type="text",e.placeholder="Description",n.addEventListener("change",(()=>{A.append(n.value),n.remove()})),t.addEventListener("change",(()=>{c.append(t.value),t.remove()})),e.addEventListener("change",(()=>{s.append(e.value),e.remove()})),A.append(i,n),s.append(e),c.append(t),a.append(A,c,s),r.insertAdjacentElement("beforebegin",a),(n=>{const e={title:undefined,desc:undefined,dueDate:undefined};let t=Array.from(document.querySelectorAll(".task"));"Inbox"===n?t.forEach((n=>{if(""!==n.querySelector(".task-h").textContent)return;const t=n.querySelector(".checkbox"),r=n.childNodes[0],o=n.childNodes[1],a=n.childNodes[2];r.addEventListener("change",(()=>{e.title=r.childNodes[1].nodeValue,localStorage.setItem("defaultProject",JSON.stringify(h.defaultProject))})),a.addEventListener("change",(()=>{e.desc=a.childNodes[0].nodeValue,localStorage.setItem("defaultProject",JSON.stringify(h.defaultProject))})),o.addEventListener("change",(()=>{e.dueDate=o.childNodes[0].nodeValue,localStorage.setItem("defaultProject",JSON.stringify(h.defaultProject))})),h.defaultProject.tasks.push(e),t.addEventListener("click",(()=>{const n=h.defaultProject.tasks.indexOf(e);h.defaultProject.tasks.splice(n,1),localStorage.setItem("defaultProject",JSON.stringify(h.defaultProject))})),localStorage.setItem("defaultProject",JSON.stringify(h.defaultProject))})):t.forEach((t=>{if(""!==t.querySelector(".task-h").textContent)return;const r=t.childNodes[0],o=t.childNodes[1],a=t.childNodes[2],i=t.querySelector(".checkbox");r.addEventListener("change",(()=>{e.title=r.childNodes[1].nodeValue,localStorage.setItem("projects",JSON.stringify(h.projectsArray))})),a.addEventListener("change",(()=>{e.desc=a.childNodes[0].nodeValue,localStorage.setItem("projects",JSON.stringify(h.projectsArray))})),o.addEventListener("change",(()=>{e.dueDate=o.childNodes[0].nodeValue,localStorage.setItem("projects",JSON.stringify(h.projectsArray))})),h.projectsArray.forEach((t=>{t.projectName===n&&(t.tasks.push(e),i.addEventListener("click",(()=>{const n=t.tasks.indexOf(e);t.tasks.splice(n,1),localStorage.setItem("projects",JSON.stringify(h.projectsArray))})))})),localStorage.setItem("projects",JSON.stringify(h.projectsArray))}))})(o.textContent)}}),b=(document.querySelector(".add-task").addEventListener("click",(()=>y())),n=>{const e=document.querySelector(".project-items-ul"),t=document.createElement("li"),r=document.createElement("img"),o=document.createElement("img"),a=document.createElement("span");if(t.classList.add("project-item"),r.classList.add("ico"),r.classList.add("add-proj"),r.src="./images/icons/task-list-svgrepo-com.svg",o.classList.add("close-proj"),o.src="./images/icons/close-svgrepo-com.svg",n)a.textContent=n,t.addEventListener("click",(()=>C(n)));else{const n=document.createElement("input");n.type="text",n.placeholder="Project Name",n.classList.add("proj-title-input"),n.addEventListener("change",(()=>{a.append(n.value),n.remove(),t.addEventListener("click",(()=>C(a.textContent))),(n=>{const e=Array.from(document.querySelectorAll(".project-item")),t=E(n);t.projectName=n,e.forEach((e=>{if(e.childNodes[1].childNodes[0].textContent!==n)return;const r=e.childNodes[2];h.projectsArray.push(t),r.addEventListener("click",(()=>{const n=h.projectsArray.indexOf(t);h.projectsArray.splice(n,1),localStorage.setItem("projects",JSON.stringify(h.projectsArray))})),localStorage.setItem("projects",JSON.stringify(h.projectsArray))}))})(a.textContent)})),a.append(n)}o.addEventListener("click",(()=>{t.remove()})),t.append(r,a,o),e.append(t)});document.querySelector(".add-proj").addEventListener("click",(()=>b())),(()=>{if(localStorage.getItem("projects")){let n=JSON.parse(localStorage.getItem("projects")),e=JSON.parse(localStorage.getItem("defaultProject"));h.defaultProject=e,h.projectsArray=n,h.defaultProject.tasks.forEach((n=>{y(n.title,n.desc,n.dueDate),Array.from(document.querySelectorAll(".task")).forEach((e=>{const t=e.childNodes[0],r=e.querySelector(".checkbox");t.childNodes[1].nodeValue===n.title&&r.addEventListener("click",(()=>{const e=h.defaultProject.tasks.indexOf(n);h.defaultProject.tasks.splice(e,1),localStorage.setItem("defaultProject",JSON.stringify(h.defaultProject))}))}))})),h.projectsArray.forEach((n=>{b(n.projectName),Array.from(document.querySelectorAll(".project-item")).forEach((e=>{e.childNodes[1].childNodes[0].textContent===n.projectName&&(e.childNodes[2].addEventListener("click",(()=>{const e=h.projectsArray.indexOf(n);h.projectsArray.splice(e,1),localStorage.setItem("projects",JSON.stringify(h.projectsArray))})),localStorage.setItem("projects",JSON.stringify(h.projectsArray)))})),n.tasks.forEach((e=>{y(e.title,e.desc,e.dueDate),Array.from(document.querySelectorAll(".task")).forEach((t=>{const r=t.childNodes[0],o=t.querySelector(".checkbox");r.childNodes[1].nodeValue===e.title&&(t.setAttribute("style","display: none;"),o.addEventListener("click",(()=>{const t=n.tasks.indexOf(e);n.tasks.splice(t,1),localStorage.setItem("projects",JSON.stringify(h.projectsArray))})))}))}))}))}else(()=>{const n=h.projectsArray,e=h.defaultProject;localStorage.setItem("projects",JSON.stringify(n)),localStorage.setItem("defaultProject",JSON.stringify(e))})()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,